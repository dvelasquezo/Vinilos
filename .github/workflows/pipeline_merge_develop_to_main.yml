name: merge_develop_to_main
on:
  pull_request:
    types:
      - labeled
      - unlabeled
      - synchronize
      - opened
      - edited
      - ready_for_review
      - reopened
      - unlocked
    branches: [ main ] 
jobs:  
  Crear-rama-release:
    name: Crear rama release
    runs-on: ubuntu-latest
    steps:
      - name: Crear rama release
        uses: peterjgrainger/action-create-branch@v2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: 'release'
  merge-develop-release:
    needs: Crear-rama-release
    name: Merge release branch
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Merge develop ->  release
        uses: devmasx/merge-branch@v1.3.1
        with:
          type: now
          target_branch: release
          github_token: ${{ github.token }}
  pruebas: 
    needs: merge-develop-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout de repositorio
        uses: actions/checkout@v2
      - name: Configuración de entorno de python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Instalación de librerias y dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Correr pruebas
        id: correr-pruebas
        run: |
          cd flaskr
          python -m unittest discover -s tests -v
  automerge:
    name: Automerge
    needs: pruebas
    runs-on: ubuntu-latest
    steps:
      - name: automerge
        uses: "pascalgn/automerge-action@4536e8847eb62fe2f0ee52c8fa92d17aa97f932f"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          MERGE_METHOD: "squash"
          MERGE_COMMIT_MESSAGE: "pull-request-title"
          MERGE_LABELS: ""    
  buildbackmain:  
    needs: automerge
    name: Deploy back main
    runs-on: ubuntu-latest     
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 
        with:
          heroku_api_key: "af5479a1-52cc-4607-b4b8-162857a3b650"
          heroku_app_name: "pruionicservice" 
          heroku_email: "crisalmo138@gmail.com"         
        env:
          HD_FLASK_APP: "flaskr/app.py"  
  buildfrontmain:
    needs: buildbackmain
    name: Deploy front main
    runs-on: ubuntu-latest   
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 
        with:
          heroku_api_key: "af5479a1-52cc-4607-b4b8-162857a3b650"
          heroku_app_name: "pruionicfront" 
          heroku_email: "crisalmo138@gmail.com"
          appdir: "front-end/tutorial-canciones" 
        env:
          HD_ENVIRONMENT: "production"
